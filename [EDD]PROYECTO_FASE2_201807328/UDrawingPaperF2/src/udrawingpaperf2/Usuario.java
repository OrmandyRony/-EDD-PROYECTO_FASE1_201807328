/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package udrawingpaperf2;

import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author orman
 */
public class Usuario extends javax.swing.JDialog {
    Cliente cliente;
    private ImageIcon image;
    private Icon icono;
    Admin admin = new Admin();
    
    /**
     * Creates new form Usuario
     * @param parent
     * @param modal
     * @param cliente
     */
    public Usuario(java.awt.Frame parent, boolean modal, Cliente cliente, Admin admin) {
        super(parent, modal);
        this.setLocationRelativeTo(this);
        this.cliente = cliente;
        initComponents();
        this.admin = admin;
    }

    private Usuario(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagen = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cargaImagenes = new javax.swing.JButton();
        cargaCapas = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        graphAvl = new javax.swing.JButton();
        graficarABB = new javax.swing.JButton();
        graficarMatriz = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Preorden = new javax.swing.JButton();
        graficarInorden = new javax.swing.JButton();
        postOrdenGrap = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        graficarPorCapa = new javax.swing.JButton();
        cerrarSesion = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        idAvl = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        capasAvl = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        imagen.setText("                                                                                                                                            No disponible");
        imagen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Carga Masiva");

        jButton1.setText("Carga Albumes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cargaImagenes.setText("Carga Imagenes");
        cargaImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaImagenesActionPerformed(evt);
            }
        });

        cargaCapas.setText("Carga Capas");
        cargaCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaCapasActionPerformed(evt);
            }
        });

        jLabel2.setText("Graficar");

        jButton4.setText("Albumes");

        graphAvl.setText("Avl Imagenes");
        graphAvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphAvlActionPerformed(evt);
            }
        });

        graficarABB.setText("Abb capas");
        graficarABB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarABBActionPerformed(evt);
            }
        });

        graficarMatriz.setText("Ver capa");
        graficarMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarMatrizActionPerformed(evt);
            }
        });

        jLabel3.setText("Ver Imagen");

        jLabel4.setText("Ver imagen y arbol de capas");

        jButton8.setText("Graficar");

        jLabel5.setText("Generación de imagenes");

        jLabel6.setText("Por recorrido");

        Preorden.setText("Preorden");
        Preorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreordenActionPerformed(evt);
            }
        });

        graficarInorden.setText("Inorden");
        graficarInorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarInordenActionPerformed(evt);
            }
        });

        postOrdenGrap.setText("Postorden");
        postOrdenGrap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postOrdenGrapActionPerformed(evt);
            }
        });

        jLabel7.setText("Por Árbol");

        jButton12.setText("Arbol de Imagenes");

        jLabel8.setText("Por capa");

        graficarPorCapa.setText("Capa");
        graficarPorCapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarPorCapaActionPerformed(evt);
            }
        });

        cerrarSesion.setForeground(new java.awt.Color(255, 51, 51));
        cerrarSesion.setText("Cerrar Sesion");
        cerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesionActionPerformed(evt);
            }
        });

        jLabel9.setText("Agregar AVL");

        jLabel10.setText("Id:");

        jLabel11.setText("capas:");

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(65, 65, 65)
                                        .addComponent(jLabel2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cargaCapas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cargaImagenes, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(graphAvl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(graficarABB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jButton8)
                                            .addComponent(graficarMatriz)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(cerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(93, 93, 93)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(postOrdenGrap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(graficarInorden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Preorden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(graficarPorCapa)
                                    .addComponent(jLabel8)
                                    .addComponent(jButton12))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(112, 112, 112))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(idAvl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(capasAvl)
                                .addGap(26, 26, 26))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(imagen, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(graficarMatriz)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(idAvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cargaImagenes)
                        .addComponent(graphAvl)
                        .addComponent(jLabel4)
                        .addComponent(Preorden)
                        .addComponent(jButton12))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(capasAvl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23)
                .addComponent(jButton2)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargaCapas)
                    .addComponent(graficarABB)
                    .addComponent(jButton8)
                    .addComponent(graficarInorden)
                    .addComponent(jLabel8))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(postOrdenGrap)
                            .addComponent(graficarPorCapa))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addComponent(cerrarSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray json = (JSONArray) obj1;
        String nombreAlbum;
        String imgs;
        
        
        for (int i = 0; i < json.size(); i++) {
            String capa = "";
            JSONObject object = (JSONObject) json.get(i);
            nombreAlbum = object.get("nombre_album").toString();
            imgs = object.get("imgs").toString();
            
            ListaImagenes listaTmp = new ListaImagenes();
            
            for (int j = 0; j < imgs.length(); j++) {
                //System.out.println(imgs);
                
                if ('0' == imgs.charAt(j)) {
                    capa += "0";
                } else if ('1' == imgs.charAt(j)) {
                    capa += "1";
                } else if ('2' == imgs.charAt(j)) {
                    capa += "2";
                } else if ('3' == imgs.charAt(j)) {
                    capa += "3";
                } else if ('4' == imgs.charAt(j)) {
                    capa += "4";
                } else if ('5' == imgs.charAt(j)) {
                    capa += "5";
                } else if ('6' == imgs.charAt(j)) {
                    capa += "6";
                } else if ('7' == imgs.charAt(j)) {
                    capa += "7";
                } else if ('8' == imgs.charAt(j)) {
                    capa += "8";
                } else if ('9' == imgs.charAt(j)) {
                    capa += "9";
                }
                
                if (imgs.charAt(j) == ',') {
                    //System.out.println("Se inserto: " + capa);
                    listaTmp.insert(Integer.parseInt(capa));
                    capa = "";
                }
                
                if (imgs.charAt(j) == ']') {
                    //System.out.println("Se inserto: " + capa);
                    if (!capa.equals("")) {
                        listaTmp.insert(Integer.parseInt(capa));
                    }
                    
                    capa = "";
                    break;
                }   
            }
            
            //System.out.println("Nombres Album: " + nombreAlbum + " Imgs: " + imgs);
            cliente.listaAlbumes.insert(listaTmp, nombreAlbum);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cargaImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaImagenesActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray json = (JSONArray) obj1;
        String id;
        String capas;
        
        
        for (int i = 0; i < json.size(); i++) {
            String capa = "";
            JSONObject object = (JSONObject) json.get(i);
            id = object.get("id").toString();
            capas = object.get("capas").toString();
            
            int idInt = Integer.parseInt(id);
            //System.out.println("Id: " + idInt);
            cliente.avlImagenes.insert(idInt);
            /**
            ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(idInt);
            System.out.println(abbTmp);
            
            for (int j = 0; j < capas.length(); j++) {
                //System.out.println(imgs);
                
                if ('0' == capas.charAt(j)) {
                    capa += "0";
                } else if ('1' == capas.charAt(j)) {
                    capa += "1";
                } else if ('2' == capas.charAt(j)) {
                    capa += "2";
                } else if ('3' == capas.charAt(j)) {
                    capa += "3";
                } else if ('4' == capas.charAt(j)) {
                    capa += "4";
                } else if ('5' == capas.charAt(j)) {
                    capa += "5";
                } else if ('6' == capas.charAt(j)) {
                    capa += "6";
                } else if ('7' == capas.charAt(j)) {
                    capa += "7";
                } else if ('8' == capas.charAt(j)) {
                    capa += "8";
                } else if ('9' == capas.charAt(j)) {
                    capa += "9";
                }
                
                if (capas.charAt(j) == ',') {
                    //System.out.println("Se inserto: " + capa);
                    abbTmp.add(Integer.parseInt(capa));
                    
                    capa = "";
                }
                
                if (capas.charAt(j) == ']') {
                    //System.out.println("Se inserto: " + capa);
                    if (!capa.equals("")) {
                        abbTmp.add(Integer.parseInt(capa));
                    }
                    
                    capa = "";
                    break;
                }   
            }
            **/
        }
    }//GEN-LAST:event_cargaImagenesActionPerformed

    private void graphAvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphAvlActionPerformed
        // TODO add your handling code here:
        cliente.avlImagenes.graficoAvl();
        this.pintarImagen(imagen, "grafica\\graficoAvl.png");
        imagen.setText("");
    }//GEN-LAST:event_graphAvlActionPerformed

    private void graficarABBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarABBActionPerformed
        // TODO add your handling code here:
        String id = JOptionPane.showInputDialog("Ingrese el numero de imagen ");
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(Integer.parseInt(id));
        if (abbTmp != null) {
            abbTmp.graficoABB("graficoABB");
            this.pintarImagen(imagen, "grafica\\graficoABB.png");
            imagen.setText("");
        }
    }//GEN-LAST:event_graficarABBActionPerformed

    private void cargaCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaCapasActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);

        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(Usuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray json = (JSONArray) obj1;
        int numeroCapa;
        int id = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Id de la imagen en el avl"));
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        
        for (int i = 0; i < json.size(); i++) {

            JSONObject object = (JSONObject) json.get(i);
            String capa = object.get("id_capa").toString();
            numeroCapa = Integer.parseInt(capa);
            JSONArray tmp = (JSONArray) object.get("pixeles");
            //System.out.println(tmp);
            MatrizDispersaPixeles matriz = new MatrizDispersaPixeles();
            for (int j = 0; j < tmp.size(); j++) {

                JSONObject object2 = (JSONObject) tmp.get(j);
                int fila = Integer.parseInt((object2.get("fila").toString()));
                int columna = Integer.parseInt((object2.get("columna").toString()));
                String hexagecimal = object2.get("color").toString();
                //System.out.println("Flia: " + fila + "Columna: " + columna);
                matriz.insert(columna, fila, hexagecimal);

            }
            
            abbTmp.add(numeroCapa, matriz);
            matriz = null;
        }
        JOptionPane.showMessageDialog(null, "Se a cargado las capas");
    }//GEN-LAST:event_cargaCapasActionPerformed

    private void graficarMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarMatrizActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el Id del avl la imagen"));
        int numeroCapa = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el numero de capa"));
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        
        if (abbTmp != null) {
            System.out.println("entro por aca");
            MatrizDispersaPixeles matriz = abbTmp.searchPreOrden(numeroCapa);
            if (matriz != null) {
                System.out.println("Graficando");
                matriz.crearGrafo2("MatrizDisperza");
                this.pintarImagen(imagen, "grafica\\MatrizDisperza.png");
                imagen.setText("");
                JOptionPane.showMessageDialog(null, "Matriz generada");
            }
            
        }
    }//GEN-LAST:event_graficarMatrizActionPerformed

    private void graficarPorCapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarPorCapaActionPerformed
        // TODO add your handling code here:
        String idStr = JOptionPane.showInputDialog("Ingrese el Id del avl la imagen");
        int id = Integer.parseInt(idStr);
        String capas = JOptionPane.showInputDialog("Ingrese las capas que desea"
                + "graficar con el siguiente formato: 0, 1, 2");
        capas += "]"; //centinela
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        
        if (abbTmp != null) {
            System.out.println("Encontrado");
            abbTmp.graficarCapas(capas, "MatrizDispersaPorCapas");
            this.pintarImagen(imagen, "grafica\\MatrizDispersaPorCapas.png");
            imagen.setText("");
            JOptionPane.showMessageDialog(null, "Matriz generada");
        }
        
    }//GEN-LAST:event_graficarPorCapaActionPerformed

    private void PreordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreordenActionPerformed
        // TODO add your handling code here:
        String idStr = JOptionPane.showInputDialog("Ingrese el Id del avl la imagen");
        int id = Integer.parseInt(idStr);
        String capas = JOptionPane.showInputDialog("Ingrese las capas que desea"
                + "graficar con el siguiente formato: 0,1,2");
        
        String[] capasU = capas.split(",");  
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        if (abbTmp != null) {
        String[] capasOrden = abbTmp.preOrden().split(",+");
        String capa3 = "";
        
        for (int i = 0; i < capasOrden.length; i++) {
            for (int j = 0; j < capasU.length; j++) {
                if (capasU[j].equals(capasOrden[i])) {
                    capa3 += capasU[j] + ",";
                    
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "En Preorden: " + capa3);
        
        capa3 += "]";
        //Capas a grafica
        
            System.out.println("Encontrado");
            abbTmp.graficarCapas(capa3, "MatrizDispersaPreorden");
            this.pintarImagen(imagen, "grafica\\MatrizDispersaPreorden.png");
            imagen.setText("");
            JOptionPane.showMessageDialog(null, "Matriz generada Preorden");
        }
    }//GEN-LAST:event_PreordenActionPerformed

    private void graficarInordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarInordenActionPerformed
        // TODO add your handling code here:
        String idStr = JOptionPane.showInputDialog("Ingrese el Id del avl la imagen");
        int id = Integer.parseInt(idStr);
        String capas = JOptionPane.showInputDialog("Ingrese las capas que desea"
                + "graficar con el siguiente formato: 0,1,2");
        
        String[] capasU = capas.split(",");  
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        if (abbTmp != null) {
        String[] capasOrden = abbTmp.inOrden().split(",+");
        String capa3 = "";
        
        for (int i = 0; i < capasOrden.length; i++) {
            for (int j = 0; j < capasU.length; j++) {
                if (capasU[j].equals(capasOrden[i])) {
                    capa3 += capasU[j] + ",";
                    
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "En innorden: " + capa3);
        
        capa3 += "]";
        //Capas a grafica
        
            System.out.println("Encontrado");
            abbTmp.graficarCapas(capa3, "MatrizDispersaInorden");
            this.pintarImagen(imagen, "grafica\\MatrizDispersaInorden.png");
            imagen.setText("");
            JOptionPane.showMessageDialog(null, "Matriz generada Inorden");
        }
        
    }//GEN-LAST:event_graficarInordenActionPerformed

    private void postOrdenGrapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postOrdenGrapActionPerformed
        // TODO add your handling code here:
        String idStr = JOptionPane.showInputDialog("Ingrese el Id del avl la imagen");
        int id = Integer.parseInt(idStr);
        String capas = JOptionPane.showInputDialog("Ingrese las capas que desea"
                + "graficar con el siguiente formato: 0,1,2");
        
        String[] capasU = capas.split(",");  
        ABBcapas abbTmp = cliente.avlImagenes.searchPreOrden(id);
        if (abbTmp != null) {
        String[] capasOrden = abbTmp.postOrden().split(",+");
        String capa3 = "";
        
        for (int i = 0; i < capasOrden.length; i++) {
            for (int j = 0; j < capasU.length; j++) {
                if (capasU[j].equals(capasOrden[i])) {
                    capa3 += capasU[j] + ",";
                    
                }
            }
        }
        
        JOptionPane.showMessageDialog(null, "En Postorden: " + capa3);
        
        capa3 += "]";
        //Capas a grafica
        
            System.out.println("Encontrado");
            abbTmp.graficarCapas(capa3, "MatrizDispersaPostorden");
            this.pintarImagen(imagen, "grafica\\MatrizDispersaPostorden.png");
            imagen.setText("");
            JOptionPane.showMessageDialog(null, "Matriz generada Postorden");
        }
    }//GEN-LAST:event_postOrdenGrapActionPerformed

    private void cerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesionActionPerformed
        // TODO add your handling code here:
        Login login = new Login(this.admin);
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_cerrarSesionActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        cliente.avlImagenes.insert(Integer.parseInt(idAvl.getText()));
        idAvl.setText("");
        capasAvl.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Usuario dialog = new Usuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private void pintarImagen(JLabel label, String ruta) {
       this.image = new ImageIcon(ruta);
       this.icono = new ImageIcon(this.image.getImage().getScaledInstance(
               label.getWidth(), label.getHeight(), Image.SCALE_DEFAULT));
        label.setIcon(this.icono);
        repaint();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Preorden;
    private javax.swing.JTextField capasAvl;
    private javax.swing.JButton cargaCapas;
    private javax.swing.JButton cargaImagenes;
    private javax.swing.JButton cerrarSesion;
    private javax.swing.JButton graficarABB;
    private javax.swing.JButton graficarInorden;
    private javax.swing.JButton graficarMatriz;
    private javax.swing.JButton graficarPorCapa;
    private javax.swing.JButton graphAvl;
    private javax.swing.JTextField idAvl;
    private javax.swing.JLabel imagen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton postOrdenGrap;
    // End of variables declaration//GEN-END:variables
}
