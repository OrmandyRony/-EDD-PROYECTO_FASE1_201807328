/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author orman
 */
public class GuiAdmin extends javax.swing.JDialog {
    Admin admin;

    /**
     * Creates new form GuiAdmin
     * @param parent
     * @param modal
     * @param adminV
     */
    public GuiAdmin(java.awt.Frame parent, boolean modal, Admin adminV) {
        super(parent, modal);
        this.setLocationRelativeTo(this);
        admin = adminV;
        initComponents();
    }
    
    

    private GuiAdmin(JFrame jFrame, boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnGraficar = new javax.swing.JButton();
        cargaMasivaMensajeros = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        dpiBuscar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnBuscarDPI = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        eliminarDPI = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        buscarDpiDatos = new javax.swing.JTextField();
        btnBuscarDatos = new javax.swing.JButton();
        cerrasSesion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        graficarTablaHash = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cargaMasivaLugares = new javax.swing.JToggleButton();
        jLabel6 = new javax.swing.JLabel();
        cargaRutas = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        graficarListaAdyacencia = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        graficarRutas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Carga Masiva Clientes");

        btnBuscar.setText("Carga Masiva");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Graficar Arbol B");

        btnGraficar.setText("Graficar");
        btnGraficar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraficarActionPerformed(evt);
            }
        });

        cargaMasivaMensajeros.setText("Carga Masiva");
        cargaMasivaMensajeros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaMasivaMensajerosActionPerformed(evt);
            }
        });

        jLabel7.setText("Modificar");

        jLabel8.setText("DPI:");

        btnBuscarDPI.setText("Modificar");
        btnBuscarDPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDPIActionPerformed(evt);
            }
        });

        jLabel9.setText("Eliminar");

        jLabel10.setText("DPI:");

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel12.setText("Buscar");

        jLabel11.setText("DPI:");

        btnBuscarDatos.setText("Buscar");
        btnBuscarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDatosActionPerformed(evt);
            }
        });

        cerrasSesion.setText("Cerrar Sesion");
        cerrasSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrasSesionActionPerformed(evt);
            }
        });

        jLabel3.setText("Carga Masiva Mensajeros");

        jLabel4.setText("Graficar TablaHash");

        graficarTablaHash.setText("Graficar");
        graficarTablaHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarTablaHashActionPerformed(evt);
            }
        });

        jLabel5.setText("Carga Masiva Lugares");

        cargaMasivaLugares.setText("Carga Masiva");
        cargaMasivaLugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaMasivaLugaresActionPerformed(evt);
            }
        });

        jLabel6.setText("Carga Masiva Rutas");

        cargaRutas.setText("Carga Masiva");
        cargaRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargaRutasActionPerformed(evt);
            }
        });

        jLabel13.setText("Graficar Lista Adyacencia");

        graficarListaAdyacencia.setText("Graficar");
        graficarListaAdyacencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarListaAdyacenciaActionPerformed(evt);
            }
        });

        jLabel14.setText("Graficar Rutas");

        graficarRutas.setText("Graficar");
        graficarRutas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarRutasActionPerformed(evt);
            }
        });

        jLabel15.setText("jLabel15");
        jScrollPane1.setViewportView(jLabel15);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1050, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cargaMasivaLugares)
                            .addComponent(jLabel6)
                            .addComponent(cargaRutas)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(btnBuscar)
                                    .addComponent(jLabel3)
                                    .addComponent(cargaMasivaMensajeros))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(graficarRutas)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(btnGraficar)))))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(graficarListaAdyacencia))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(cerrasSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel13))
                                        .addGap(77, 77, 77)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(eliminarDPI))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel12))
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(buscarDpiDatos))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(graficarTablaHash))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(211, 211, 211)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel7)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel8)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(dpiBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(0, 32, Short.MAX_VALUE)))
                                .addGap(48, 48, 48)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnBuscarDPI)
                                .addComponent(btnEliminar))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(btnBuscarDatos)))
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBuscarDPI)
                        .addGap(88, 88, 88)
                        .addComponent(btnEliminar)
                        .addGap(45, 45, 45)
                        .addComponent(btnBuscarDatos)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnBuscar)
                                        .addComponent(btnGraficar)
                                        .addComponent(graficarTablaHash))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dpiBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel13))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel3)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cargaMasivaMensajeros)
                                    .addComponent(graficarRutas))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(graficarListaAdyacencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(eliminarDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cargaMasivaLugares))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cerrasSesion, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel11)
                                            .addComponent(buscarDpiDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cargaRutas)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray json = (JSONArray) obj1;
        long numeroDpi;
        String dpi;
        String nombre;
        String usuario;
        String correo;
        String contrasena;
        String telefono;
        String direccion;
        String idMunicipio;
        int jsonSize = json.size();
        for (int i = 0; i < jsonSize; i++) {
            JSONObject object = (JSONObject) json.get(i);
            dpi = object.get("dpi").toString();
            numeroDpi = Long.parseLong(dpi);
            
            nombre = object.get("nombre_completo").toString();
            usuario = object.get("nombre_usuario").toString();
            correo = object.get("correo").toString();
            contrasena = object.get("contrasenia").toString();
            telefono = object.get("telefono").toString();
            direccion = object.get("direccion").toString();
            idMunicipio = object.get("id_municipio").toString();
            //System.out.println("Numero: " + numeroDpi + "NombreCliente: " + nombreCliente + "Password: " + password);
            admin.arbolBClientes.insertarNodo(numeroDpi, nombre, usuario, correo, 
                    telefono, contrasena,direccion, idMunicipio);
        }
        
        JOptionPane.showMessageDialog(null, "La carga de clientes se realizado con exito");
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGraficarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraficarActionPerformed
        // TODO add your handling code here:
        admin.arbolBClientes.graficar();
        try {
            this.pintarImagen("Admin\\Arbol.jpg");
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
    }//GEN-LAST:event_btnGraficarActionPerformed

    private void cargaMasivaMensajerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaMasivaMensajerosActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        JSONArray json = (JSONArray) obj1;
        long numeroDpi;
        String dpi;
        String nombre;
        String apellido;
        String tipoLicencia;
        String genero;
        String telefono;
        String direccion;

        int sizeJson = json.size();
        for (int i = 0; i < sizeJson ; i++) {
            JSONObject object = (JSONObject) json.get(i);
            dpi = object.get("dpi").toString();
            numeroDpi = Long.parseLong(dpi);
            
            nombre = object.get("nombres").toString();
            apellido = object.get("apellidos").toString();
            tipoLicencia = object.get("tipo_licencia").toString();
            genero = object.get("genero").toString();
            telefono = object.get("telefono").toString();
            direccion = object.get("direccion").toString();
            
            admin.tablaHashMensajeros.insert(numeroDpi, nombre, apellido, tipoLicencia, 
                    genero, telefono, direccion);
        }
        
        JOptionPane.showMessageDialog(null, "La carga de mensajeros se realizado con exito");
    }//GEN-LAST:event_cargaMasivaMensajerosActionPerformed

    private void btnBuscarDPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDPIActionPerformed
        // TODO add your handling code here:
        NodoB nodoCliente = admin.arbolBClientes.buscar(admin.arbolBClientes.raiz, Long.parseLong(dpiBuscar.getText()));
        if (nodoCliente != null) {
            String nuevoNombre = JOptionPane.showInputDialog("El nombre es: " + nodoCliente.cliente.nombre);
            nodoCliente.cliente.nombre = nuevoNombre;
            String nuevoPassword = JOptionPane.showInputDialog("El password es: " + nodoCliente.cliente.contrasena);
            nodoCliente.cliente.contrasena= nuevoPassword;
        } else {
            JOptionPane.showMessageDialog(null, "El usuario no puedo ser encontrado");
        }
    }//GEN-LAST:event_btnBuscarDPIActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (admin.arbolBClientes.eliminar(Long.parseLong(eliminarDPI.getText()))) {
            JOptionPane.showMessageDialog(null, "El cliente a sido eliminado");
        } else {
            JOptionPane.showMessageDialog(null, "El cliente no pudo ser eleiminado");
        }
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDatosActionPerformed
        // TODO add your handling code here:
        NodoB nodoCliente = admin.arbolBClientes.buscar(admin.arbolBClientes.raiz, Long.parseLong(buscarDpiDatos.getText()));
        if (nodoCliente != null) {
            JOptionPane.showMessageDialog(null, "El nombre es: " + nodoCliente.cliente.nombre 
                    + "\nEl password es: " + nodoCliente.cliente.contrasena);
           
        } else {
            JOptionPane.showMessageDialog(null, "El cliente no puedo ser encontrado");
        }
    }//GEN-LAST:event_btnBuscarDatosActionPerformed

    private void cerrasSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrasSesionActionPerformed
        // TODO add your handling code here:
        Login login = new Login(this.admin);
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_cerrasSesionActionPerformed

    private void graficarTablaHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarTablaHashActionPerformed
        // TODO add your handling code here:
        admin.tablaHashMensajeros.Graficar();
        try {
            pintarImagen("Admin\\TablaHash.jpg");
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_graficarTablaHashActionPerformed

    private void cargaMasivaLugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaMasivaLugaresActionPerformed
        // TODO add your handling code here:
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JSONObject json = (JSONObject) obj1;
        
        int id;
        String departamento;
        String nombre;
        String sucursal;
        boolean existeSucursal;
        
        JSONArray lugares;
        
        lugares = (JSONArray) json.get("Lugares");
        JSONObject object2;
        int lugaresSize = lugares.size();
        for (int j = 0; j < lugaresSize; j++) {
            object2 = (JSONObject) lugares.get(j);
            id = Integer.parseInt(object2.get("id").toString());
            departamento = object2.get("departamento").toString();
            nombre = object2.get("nombre").toString();
            sucursal = object2.get("sn_sucursal").toString();
            existeSucursal = sucursal.equals("si");

            admin.listaAdyacencia.insert(id, departamento, nombre, existeSucursal);
        }
        
        JOptionPane.showMessageDialog(null, "La carga de Lugares se a realizado con exito");
    }//GEN-LAST:event_cargaMasivaLugaresActionPerformed

    private void cargaRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargaRutasActionPerformed
        String ruta = "";
        JFileChooser fc = new JFileChooser();
        int op = fc.showOpenDialog(this);
        if (op == JFileChooser.APPROVE_OPTION) {
            ruta = fc.getSelectedFile().toString();
            //System.out.println("La ruta es: " + ruta);
        }

        File doc = new File(ruta);
        BufferedReader obj = null;
        try {
            obj = new BufferedReader(new FileReader(doc));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        String strng;
        ruta = "";

        try {
            while ((strng = obj.readLine()) != null) {
                ruta += strng;
            }
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }

        JSONParser parser = new JSONParser();
        Object obj1 = null;
        
        try {
            obj1 = parser.parse(ruta);
        } catch (ParseException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JSONObject json = (JSONObject) obj1;
        
        int inicioR;
        int finalR;
        int peso;
        Lugar lugar;
        JSONArray grafo;
        
        grafo = (JSONArray) json.get("Grafo");
        JSONObject object2;
        
        for (int i = 0; i < grafo.size(); i++) {
                object2 = (JSONObject) grafo.get(i);
                inicioR = Integer.parseInt(object2.get("inicio").toString());
                finalR = Integer.parseInt(object2.get("final").toString());
                peso = Integer.parseInt(object2.get("peso").toString());

                lugar = admin.listaAdyacencia.search(inicioR);
                if (lugar != null) {
                    lugar.listaRutas.insert(inicioR, finalR, peso);
                }
            }
        
        JOptionPane.showMessageDialog(null, "La carga de Rutas se ha realizado con exito");
          
    }//GEN-LAST:event_cargaRutasActionPerformed

    private void graficarListaAdyacenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarListaAdyacenciaActionPerformed
        // TODO add your handling code here:
        admin.listaAdyacencia.graficar();
        try {
            pintarImagen("Admin\\ListaAdyacencia.jpg");
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_graficarListaAdyacenciaActionPerformed

    private void graficarRutasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarRutasActionPerformed
        // TODO add your handling code here:
        admin.listaAdyacencia.graficarGrafo();
        try {
            pintarImagen("Admin\\GrafoRutas.jpg");
        } catch (IOException ex) {
            Logger.getLogger(GuiAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_graficarRutasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GuiAdmin dialog = new GuiAdmin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    public void pintarImagen(String ruta) throws IOException{
        File file = new File(ruta);
        BufferedImage bufferedImage = ImageIO.read(file);

        ImageIcon imageIcon = new ImageIcon(bufferedImage);
        jLabel15.setSize(imageIcon.getIconWidth(), imageIcon.getIconHeight());
        jLabel15.setIcon(imageIcon);
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarDPI;
    private javax.swing.JButton btnBuscarDatos;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGraficar;
    private javax.swing.JTextField buscarDpiDatos;
    private javax.swing.JToggleButton cargaMasivaLugares;
    private javax.swing.JButton cargaMasivaMensajeros;
    private javax.swing.JButton cargaRutas;
    private javax.swing.JButton cerrasSesion;
    private javax.swing.JTextField dpiBuscar;
    private javax.swing.JTextField eliminarDPI;
    private javax.swing.JButton graficarListaAdyacencia;
    private javax.swing.JButton graficarRutas;
    private javax.swing.JButton graficarTablaHash;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
